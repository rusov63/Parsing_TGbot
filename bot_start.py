import asyncio

from aiogram import Router, types, F
from aiogram.enums import ChatAction
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hbold

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

user_router = Router()

from typing import NoReturn


@user_router.message(CommandStart())
async def command_start(message: types.Message) -> NoReturn:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏.

    :arg:
        message (types.Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    :return:
        NoReturn: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
    """
    await message.bot.send_chat_action(chat_id=message.from_user.id,
                                       action=ChatAction.TYPING)
    await asyncio.sleep(.5)

    await message.reply(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, {hbold(message.from_user.full_name)}!')

    await message.answer(f'–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ', reply_markup=keyboard_main())


@user_router.callback_query(F.data == '/start')
async def command(callback: CallbackQuery) -> NoReturn:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ inline-–∫–Ω–æ–ø–∫–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π /start.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç callback.

    :arg:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞

    :return:
        NoReturn: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
    """
    await callback.bot.send_chat_action(chat_id=callback.message.from_user.id,
                                        action=ChatAction.TYPING)
    await asyncio.sleep(.5)

    await callback.message.answer(f'–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ', reply_markup=keyboard_main())

    await callback.answer(f'–°—Ç–∞—Ä—Ç–æ–≤–∞—è')


def keyboard_main() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–æ—Ç–∞.

    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç 2 –∫–Ω–æ–ø–∫–∏:
    - –°–±–æ—Ä—â–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (/crawler)
    - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å

    :return:
        InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    inline_main = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üìä –°–±–æ—Ä—â–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', callback_data='/crawler')],
        [InlineKeyboardButton(text='üì© –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')]
    ])

    return inline_main
